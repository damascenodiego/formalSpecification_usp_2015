MODULE main
VAR
	state : {s1, s2, s3, s4, s5,s6,s7};
ASSIGN
	
	next(state) := 

		case

			state = s1 : {s2, s4};
			state = s2 : s3;
			state = s3 : {s2, s4};
			state = s4 : {s1, s6};
			state = s5 : {s1, s4, s5};
			state = s6 : s7;
			state = s7 : s5;

		esac;

DEFINE

start  := (state = s2) | (state = s3) | (state = s6) | (state = s7);
closed := (state = s3) | (state = s4) | (state = s5) | (state = s6) | (state = s7);
heat   := (state = s5) | (state = s7);
error  := (state = s2) | (state = s3);



-------------------------------
-- 1 EXPRESSAO CONVERTIDA:
---- ORIGINAL -> 	AG( start -> AF heat )

---- TRADUÇÃO : SEMPRE QUE O MICROONDAS ESTIVER NO ESTADO 'START', EM ALGUM MOMENTO DO FUTURO ELE PODERÁ AQUECER (HEAT).

---- !EF !( !start | ! EG !heat)

-- ou 

---- !E[TRUE U !(!start | !EG !heat)]
--------------------------------



--------------------------------
-- 2 EXPRESSAO CONVERTIDA:
-- ORIGINAL -> A[!heat U closed]


-- TRADUÇÃO : O MICROONDAS SEMPRE ESTARÁ OU FECHADOU OU NÃO ESTARÁ QUENTE
-- !(E [(!closed) U (!(!heat | closed))] | (EG (!closed)))
--------------------------------


--------------------------------
-- 3 EXPRESSAO CONVERDIDA:
-- ORIGINAL -> AG( error -> AF !error )

-- TRADUÇÃO: SEMPRE QUE HOUVER UM ERRO (ERROR), EM ALGUM MOMENTO NO FUTURO O ERRO DEIXARÁ DE EXISTIR (!ERROR)
-- !EF !(!error | !EG(error))
-------------------------------

-- 4 EXPRESSAO (NOVA):
-- EF(AG(heat & closed))
-- EF( !(!EF !(heat & closed)) | !E[TRUE U !(heat & closed)]) 